function[lny,sigma,tau,phi]=I2008(To,M,Rrup,Vs30,SOF,adjfun)
% Syntax : I2008 SOF                                                        

% An NGA Empirical Model for Estimating the Horizontal Spectral Values
% Generated By Shallow Crustal Earthquakes
% I. M. Idriss
% Earthquake Spectra, Volume 24, No.1, pages 217-242, February 2008

st = dbstack;
[isadmisible,units] = isIMadmisible(To,st(1).name,[0 10],[nan nan],[nan nan],[nan nan]);
if isadmisible==0
    lny   = nan(size(M));
    sigma = nan(size(M));
    tau   = nan(size(M));
    phi   = nan(size(M));
    return
end

To      = max(To,0.01); %PGA is associated to To=0.01;
period  = [0.01 0.02 0.03 0.04 0.05 0.06 0.08 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.6 0.7 0.8 0.9 1 1.5 2 3 4 5 6 7 8 9 10];
T_lo    = max(period(period<=To));
T_hi    = min(period(period>=To));
index   = find(abs((period - T_lo)) < 1e-6); % Identify the period
M(M>8.5)=NaN;
if T_lo==T_hi
    [lny,sigma] = gmpe(index,M,Rrup,SOF,Vs30);
else
    [lny_lo,sigma_lo] = gmpe(index,  M,Rrup,SOF,Vs30);
    [lny_hi,sigma_hi] = gmpe(index+1,M,Rrup,SOF,Vs30);
    x          = log([T_lo;T_hi]);
    Y_sa       = [lny_lo,lny_hi]';
    Y_sigma    = [sigma_lo,sigma_hi]';
    lny        = interp1(x,Y_sa,log(To))';
    sigma      = interp1(x,Y_sigma,log(To))';
end

tau   = nan(size(M));
phi   = nan(size(M));
% unit convertion
lny  = lny+log(units);

% modifier
if exist('adjfun','var')
    SF  = feval(adjfun,To); 
    lny = lny+log(SF);
end

function[lny,sigma]=gmpe(index,M,Rrup,SOF,Vs30)

switch SOF
    case 'strike-slip'     , F=0;
    case 'normal'          , F=0;
    case 'normal-oblique'  , F=0;
    case 'reverse'         , F=1;
    case 'reverse-oblique' , F=1;
    case 'unspecified'     , F=0;
end

period  = [0.01 0.02 0.03 0.04 0.05 0.06 0.08 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.6 0.7 0.8 0.9 1 1.5 2 3 4 5 6 7 8 9 10];
To    = period(index);
Coef1 = [3.7066	-0.1252	2.9832	-0.2339	0.00047	0.12
3.7066	-0.1252	2.9832	-0.2339	0.00047	0.12
3.7566	-0.1252	2.9832	-0.2339	0.00047	0.12
3.8066	-0.1252	2.9832	-0.2339	0.00047	0.12
4.1248	-0.1781	3.0156	-0.2445	0	0.12
4.4681	-0.2228	3.0708	-0.2536	0	0.12
4.4853	-0.1949	3.1071	-0.2576	0	0.12
4.4592	-0.1624	3.1212	-0.257	0	0.12
3.4793	-0.0188	2.8609	-0.2267	0	0.12
3.2354	0.0346	2.8739	-0.2282	0	0.12
2.7628	0.0791	2.8203	-0.2292	-0.00049	0.12
2.3813	0.1187	2.8126	-0.2301	0.00052	0.12
2.0302	0.1545	2.8056	-0.2309	0.00099	0.12
1.7037	0.1873	2.7992	-0.2317	0.00112	0.12
1.394	0.2177	2.7932	-0.2324	0.00114	0.12
1.0893	0.2461	2.7876	-0.233	0.00132	0.12
0.5308	0.2979	2.7772	-0.2342	0.00154	0.12
0.024	0.3443	2.7677	-0.2353	0.0017	0.12
-0.4141	0.3866	2.759	-0.2363	0.00152	0.12
-0.8184	0.4255	2.751	-0.2373	0.00157	0.11
-1.229	0.4615	2.7434	-0.2381	0.00188	0.1
-2.9168	0.6103	2.7112	-0.2418	0.0025	0.06
-4.2783	0.7246	2.6851	-0.2447	0.00268	0.04
-6.2431	0.8935	2.6437	-0.2493	0.0005	0
-7.6967	1.0137	2.611	-0.2529	-0.00248	0
-8.811	1.1027	2.5839	-0.2558	-0.00453	0
-9.7232	1.1696	2.5607	-0.2582	-0.00566	0
-10.4706	1.2197	2.5406	-0.2603	-0.00633	0
-11.0814	1.2566	2.5228	-0.2621	-0.00671	0
-11.5896	1.2826	2.507	-0.2636	-0.00689	0
-12.0149	1.2995	2.4928	-0.265	-0.00709	0];

Coef2 = [5.6315	-0.4104	2.9832	-0.2339	0.00047	0.12
5.6315	-0.4104	2.9832	-0.2339	0.00047	0.12
5.6815	-0.4104	2.9832	-0.2339	0.00047	0.12
5.7315	-0.4104	2.9832	-0.2339	0.00047	0.12
5.8447	-0.4329	2.9487	-0.2346	0	0.12
6.0362	-0.4551	2.9494	-0.2356	0	0.12
6.4307	-0.4831	2.9788	-0.2386	0	0.12
6.3053	-0.4359	2.9153	-0.2265	0	0.12
5.0845	-0.2566	2.4829	-0.1707	0	0.12
5.0842	-0.2393	2.5066	-0.1738	0	0.12
4.5453	-0.185	2.3687	-0.1623	-0.00049	0.12
4.2719	-0.1614	2.3475	-0.1612	0.00052	0.12
4.0174	-0.1399	2.3284	-0.1602	0.00099	0.12
3.7792	-0.1202	2.3105	-0.1593	0.00112	0.12
3.5519	-0.102	2.2937	-0.1584	0.00114	0.12
3.3235	-0.0849	2.2793	-0.1577	0.00132	0.12
2.9047	-0.0538	2.2507	-0.1562	0.00154	0.12
2.5222	-0.0258	2.225	-0.1549	0.0017	0.12
2.1972	-0.0003	2.2014	-0.1537	0.00152	0.12
1.8971	0.0232	2.1786	-0.1525	0.00157	0.11
1.5822	0.045	2.1588	-0.1515	0.00188	0.1
0.2888	0.1354	2.072	-0.1471	0.0025	0.06
-0.7737	0.2054	2.0027	-0.1436	0.00268	0.04
-2.3037	0.3099	1.8938	-0.1382	0.0005	0
-3.4564	0.3855	1.8091	-0.1341	-0.00248	0
-4.3563	0.4427	1.7401	-0.1308	-0.00453	0
-5.1145	0.4868	1.6825	-0.1281	-0.00566	0
-5.7538	0.5209	1.6327	-0.1258	-0.00633	0
-6.2921	0.5471	1.59	-0.1239	-0.00671	0
-6.7588	0.5669	1.5532	-0.1223	-0.00689	0
-7.1679	0.5814	1.5201	-0.1209	-0.00709	0];

C1  = Coef1(index,:);
C2  = Coef2(index,:);

alfa1  = (M<=6.75)*C1(1)+and(6.75<M,M<=8.5)*C2(1);
alfa2  = (M<=6.75)*C1(2)+and(6.75<M,M<=8.5)*C2(2);
beta1  = (M<=6.75)*C1(3)+and(6.75<M,M<=8.5)*C2(3);
beta2  = (M<=6.75)*C1(4)+and(6.75<M,M<=8.5)*C2(4);
gama   = (M<=6.75)*C1(5)+and(6.75<M,M<=8.5)*C2(5);
phi    = (M<=6.75)*C1(6)+and(6.75<M,M<=8.5)*C2(6);
dalfa1 = 0;

if Vs30>900
    Toe = max(To,0.05);
    Toe = min(Toe,10);
    dalfa1= log((1+11*Toe+0.27*Toe^2)/(1+16*Toe+0.08*Toe^2));
end

lny = alfa1 + alfa2.*M-(beta1+beta2.*M).*log(Rrup+10)+gama.*Rrup+phi*F+dalfa1;

Mt=max(5,M);
Mt=min(7.5,Mt);
peri=max(0.05,To);
peri=min(3,peri);
sigma = 1.28+0.05*log(peri) - 0.08*Mt;


